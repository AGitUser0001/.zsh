builtin enable shift continue source command eval zselect printf strftime emulate zmodload
builtin emulate -LR zsh
builtin zmodload zsh/zselect zsh/datetime zsh/mathfunc

local seconds=2 print_header=1
while [[ $1 == -* ]] {
  case $1 {
    (-*n*)
    builtin shift
    seconds=$1
    builtin shift;;
    (-*t*)
    print_header=0
    builtin shift;;
    (--)
    builtin shift
    builtin break;;
    (-*)
    console:error invalid argument: $1; return;;
  }
}

local centiseconds=$(( max(int(rint(seconds * 10) * 10), 10) ))
local seconds=$(( float(centiseconds) / 100 ))

local reply=(smcup)
builtin source $ZDOTDIR/terminfo.zsh
while (( 1 )) {
  builtin command /bin/stty echo
  local reply=(clear)
  builtin source $ZDOTDIR/terminfo.zsh
  if (( $print_header )) {
    local fseconds='' date=''
    builtin printf -v fseconds '%.1f' "$seconds"
    local left="Every ${fseconds}s: $@"
    builtin strftime -s date '%a %b %d %T %Y'
    local right="$USER: $date"
    builtin printf "%s%$(($COLUMNS-${#left}))s\n\n" "$left" "$right"
  }
  builtin eval "${(q-)@}"
  local reply=('cup $LINES $COLUMNS')
  builtin source $ZDOTDIR/terminfo.zsh
  builtin command /bin/stty -echo
  builtin zselect -t $centiseconds
}
local reply=(rmcup)
builtin source $ZDOTDIR/terminfo.zsh
