echo ${a#*( |$'\t')##}
echo ${a##*( |$'\t')##}
a='$a    two'
echo ${a##*( |$'\t')##}
echo ${a#*( |$'\t')##}
echo ${a##if[[:space:]]##}
echo ${a##if[[:space:]]##}
a='if   testing   two'
echo ${a##if[[:space:]]##}
echo ${a##[[^:space:]]##[[:space:]]##}
echo ${a##[[^:space:]]##[[:space:]]##}
echo ${a##[^[:space:]]##[[:space:]]##}
echo ${a##[^[:space:]]##[[:space:]]##}
zsh -lix
mail
alias
killall WallpaperAgent
brew services restart httpd
sudo brew services restart httpd
cat /opt/homebrew/etc/httpd/httpd.conf
sudo brew services restart httpd
sudo brew services restart httpd
sudo brew services restart httpd
nano /opt/homebrew/etc/httpd/httpd.conf
sudo brew services restart httpd
cat /opt/homebrew/var/log/httpd/error_log
nano /opt/homebrew/etc/httpd/httpd.conf
sudo brew services restart httpd
cat /opt/homebrew/var/log/httpd/error_log
cat /opt/homebrew/var/log/httpd/access_log
cat /opt/homebrew/var/log/httpd/access_log
cat /opt/homebrew/var/log/httpd/error_log
rm /opt/homebrew/var/log/httpd/error_log
rm /opt/homebrew/var/log/httpd/access_log
cat /opt/homebrew/var/log/httpd/ssl_request_log
rm /opt/homebrew/var/log/httpd/ssl_request_log
sudo login root
run-help login
clear
sudo login
clear
_login
run-help login
clear
sudo login -f
run-help login
run-help login
cat /etc/nologin
cat /etc/motd
run-help login
cat /var/run/utmpx
run-help login
cat /var/mail/lucaszheng
sudo login -f root
clear
ZDOTDIR=$ZDOTDIR sudo login -f root
ZDOTDIR=$ZDOTDIR sudo -E login -f root
ZDOTDIR=$ZDOTDIR sudo --preserve-env login -f root
ZDOTDIR=$ZDOTDIR sudo -E login -pf root
ZDOTDIR=$ZDOTDIR sudo -E login -p -f root
ct
exit
echo $ct
ct
ct() { :;};
export ct
zsh
export ct
zsh
BASH_FUNC_x%%=a
"BASH_FUNC_x%%"=a
function example {\
    echo "hello world"\
}
function example {\
    echo "hello world"\
}\
export -f example
which ]
test echo a
test a
test a ]
which [
which /bin/[
which /bin/\[
/bin/\[ ]
/bin/test ]
=test ]
run-help declare
run-help typeset
run-help sudo
run-help typesef
run-help typesef
run-help typeset
run-help typeset
run-help zselect
zselect
run-help zselect
zselect -t 50
zselect -t 100
zwatch
while(){}
alias a='while'
[[(){}
'[['(){}
[[ echo 1
'while'(){}
while a
while;
disable while
builtin continue
zwatch
watcg
watch
watch echo
watch echo
zwatch
watch echo
zwatch echo
zwatch /bin/echo
zwatch /bin/echo
zwatch printf ''
zwatch echo
clear
watch
watch echo
zwatch echo
builtin clear
which clean
which clear
which =clear
=clear
=clear
=clear
brew info clear
brew search clear
echoti clear
zwatch
echoti clear
echoti sc
echoti ndscr
echoti cuf
echoti ndscr
tpu
tput
which tput
run-help print
run-help echoti
which echoti
echoti cnorm sgr0 smam sc rmcup
__reset
time echoti
time echoti smcup
time echoti smcup
time echoti smcup
echoti cnorm sgr0 smam sc rmcup
run-help echoti
run-help zshmodules
time echoti smcup
time echoti smcup
run-help echoti
run-help zshmodules
echoti a
\
echoti sgr0
zwatch
\
echoti sgr0
echoti smam
echoti cnorm
echo -E $terminfo
echo -v $terminfo
echoti cuf
run-help terminfo
echo -e '\e[C'
echo -e '\e[3J'
echo -e '\e[2J'
echo -e '\e[1J'
echo -e '\e[J'
echo -e '\e[J'
run-help terminfo
echo -e '\e[J'
echo -e '\e[H\e[J'
echo -e '\e[H\e[J'
echo -en '\e[H\e[J'
echo -en '\e[H\e[J'
echoti clear
echoti clear
echoti clear
clear -x
run-help clear
run-help clear
=clear
clear | cat -v
=clear | cat -v
=clear | cat -v
echo -en '\e[3J'
echo -en '\e[3J\e[H\e[2J'
zwatch
zwatch
yes
echo -en '\e[3J\e[H\e[2J'
echo $terminfo | cat -v
echo -e '\e[J'
echoti colors | cat -v
echoti colors | cat -v
echoti cnorm | cat -v
echoti db | cat -v
echoti db | cat -v
echoti eo | cat -v
echoti cud | cat -v
echoti hts | cat -v
echoti cols | cat -v
echoti cpix | cat -v
echoti cr | cat -v
clear
typeset terminfo
echoti ed
echoti ed; echo a
run-help terminfo
echoti e3
tput e3
terminfo
run-help terminfo
clear
cat /usr/share/terminfo/*/$TERM
cat /usr/share/terminfo/*/$TERM
cat -v /usr/share/terminfo/*/$TERM
echoti E3
echoti E3
echoti E3
echoti E3
echoti E3
echoti E3
echoti e3
echo "$terminfo[E3]"
echo "$terminfo[E3]"
yes
echo "$terminfo[E3]"
b() { echo $a}
a() { local a=test; b; }
b
a
echo $a
__reset | cat -v
__reset | cat -v
__reset | cat -v
__tty-avail
echo $?
__tty-avail
which __tty-avail
\
() { </dev/tty } &> /dev/null
echo $?
\
() { <asdf } &> /dev/null
echo $?
<dasfk &>/dev/null
__reset
__reset | echo
__tty
__tty
__tty | echo
set -x
__tty
functions -T __tty
__tty
zpty __reset
run-help zpty
__reset | cat -v
echoti smcup | cat -v
echoti rmcup | cat -v
zwatch
functions -T zwatch
zwatch
zwatch
\
builtin local reply=(smcup)
local reply=(smcup)
zwatch
clear
nano
disable disable
disable
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
zsh -f
disable -m '*'
disable -m '*'
zsh -f
disable -m '*'
disable -m '*'
disable -m '*'
disable echo
echo
zsh -f
disable -m '*'
disable -m '*'
zsh -f +li
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
disable -m '*'
yes
clear
builtin local a=(123)
builtin local a=(0)
builtin local a=(2)
builtin local a=(3)
builtin local a=(4)
builtin local a=(5)
builtin local a=(6)
builtin local a=(echo)
builtin local a=(echo a) 
builtin local a=\(echo a) 
builtin local a=\(echo a\) 
builtin local a=\(echo\ a\) 
echo $a
local() {echo a}
local
which local
which -a local
disable local
which -a local
which -a local
which -a local
local
clear
local
'local'
which
which -a
local() {echo a}
disable local
local a=1
echo $a
which source
which .
which echo
disable echo
echo
which echo
typeset terminfo
echo $terminfo[E3]
typeset terminfo
echo $terminfo[E3]
echo $terminfo[E3] | cat -v
echo $terminfo[E3sfd]
zwatch
watch
watch echo
yes
echo -n "Old line"; echo "\033[1A\033[1A" "new line"\

echo -n "Old line"; echo "\033[1A\033[1A" "new line"
echo -en "Old line"; echo "\033[1A\033[1A" "new line"
echo -En "Old line"; echo "\033[1A\033[1A" "new line"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/problemj5x2.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/problemj5x2.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
clear
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
/opt/homebrew/opt/python/bin/python3 "/Users/lucaszheng/Code/(New)/Wiz Robotics/sketch.py"
login -f
run-help login
/bin/zsh -fc
echo $path
 /usr/bin/env /opt/homebrew/Cellar/openjdk/21.0.2/libexec/openjdk.jdk/Contents/Home/bin/java --enable-preview -XX:+ShowCodeDetailsInExceptionMessages -cp /Users/lucaszheng/Library/Application\ Support/Code/User/workspaceStorage/6131de43703c4e806fcbe2a251fc60e1/redhat.java/jdt_ws/Wiz\ Robotics_378dd992/bin Solution 
 /usr/bin/env /opt/homebrew/Cellar/openjdk/21.0.2/libexec/openjdk.jdk/Contents/Home/bin/java --enable-preview -XX:+ShowCodeDetailsInExceptionMessages -cp /Users/lucaszheng/Library/Application\ Support/Code/User/workspaceStorage/6131de43703c4e806fcbe2a251fc60e1/redhat.java/jdt_ws/Wiz\ Robotics_378dd992/bin Solution 
 /usr/bin/env /opt/homebrew/Cellar/openjdk/21.0.2/libexec/openjdk.jdk/Contents/Home/bin/java --enable-preview -XX:+ShowCodeDetailsInExceptionMessages -cp /Users/lucaszheng/Library/Application\ Support/Code/User/workspaceStorage/6131de43703c4e806fcbe2a251fc60e1/redhat.java/jdt_ws/Wiz\ Robotics_378dd992/bin Solution 
run-help login
brew doctor
brew info openssl@1.0
brew info --full-name openssl@1.0
brew reinstall openssl@1.0
brew uninstall openssl@1.0
rm -rf   /opt/homebrew/etc/openssl@1.0
rm -rf   /opt/homebrew/etc/openssl@1.0
ls   /opt/homebrew/etc/openssl@1.0
clear
brew doctor
brew info lua
brew info lua@5.3
brew deps lua@5.3
brew deps --installed --tree
brew uninstall lua@5.3
brew-manage update
brew doctor
brew info openssl@1.1
brew deps --tree --installed
brew uninstall openssl@1.1
brew info expect
brew info tcl-tk
brew info autoconf
brew info m4
brew info automake
brew info libtool
brew reinstall expect
brew info openssl@1.1
brew uninstall openssl@1.1
rm -rf   /opt/homebrew/etc/openssl@1.1
clear
brew doctor
brew info cling
clear
brew deps --tree --installed
clear
brew uninstall --zap cling
clang
brew info llvm
cling
brew doctor
grep --version
brew info grep
brew search grep
brew info bgrep
grep --version
brew info awk
awk --version
brew install awk
zwatch
watch zsh
a
watch echo
watch echo
typeset terminfo
printf '\033F' | cat -v
clear
echo $terminfo | cat -v
zwatch echo -e '\033F'
echo -e '\033F'
zsh -f
zsh +li -f
tput cup 9999 0
echoti lines
echoti cuu
echo $terminfo | cat -v
echoti cup 1000 1000 | cat -v
echoti csi
echoti cuf
echoti cuf 100 100
echoti cdp 100 100
echoti cdo 100 100
echoti cdown 100 100
echoti cup 100 100
clear
echoti cup 1000 1000
watch echo
zwatch zsh
zwatch zsh -f
watch zsh -f
watch echo
export LINES=0
echo $LINES
export LINES=0
echo $LINES
zmodload -u zsh/terminfo
echo $LINES
export LINES=0
echo $LINES
zmodload -u zsh/terminfo
echo $LINES
typeset
echo -v $terminfo[cup]
print -v $terminfo[cup]
print -v "$terminfo[cup]"
print $terminfo[cup] | cat -v
printf "$terminfo[cup]" a
printf "$terminfo[cup]" 1
run-help echoti
run-help zshmodules
a = ( (echo a) (echo b) )
local a=( (echo a) (echo b) )
local a=( (echo a) (echo b) )
echo $a
echo $LANG
echo $COLS
echo $COLUMNS
zwatch echo
zwatch echo
run-help read
stty -echo | cat -v
run-help read
zwatch echo
zwatch echo
zwatch echo
zwatch echo
zwatch echo
ttyctl
run-help ttyctl
run-help stty
run-help read
read -s
read -s -d ''
read -s -d ''&
fg
which stty
run-help zshmodules
zsystem
run-help zsystem
run-help zshmodules
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time stty -echo
time zselect -t 100
time zselect -t 100
exit
zwatch
zwatch zsh
zwatch zsh -f
watch zsh -f
builtin command /bin/stty -echo
echo
jobs
exit
exit
zwatch zsh -f
zwatch zsh -f
zwatch zsh
watch
watch echo
zwatch echo
zwatch echo
strftime
strftime %+
strftime %+
strftime
strftime +
strftime %+
exec 3>&-
watch echo
zwatch echo
zwatch echo
date
run-help date
date
run-help date
run-help date
run-help date
zmodload zsh/datetime
zmodload
date
run-help date
run-help zshmodules
zwatch echo
zwatch echo
watch echo
zwatch echo
watch echo
date
watch echo
strftime %A
strftime %a
strftime %a%b
strftime %a %b
strftime '%a %b'
strftime '%a %b %D'
strftime '%a %b %d'
run-help watch
run-help date
strftime '%a %b %d %T'
strftime '%a %b %d %T %Y'
zwatch echo
watch zsh -f
zwatch zsh -f
watch echo a
zwatch echo a
watch echo a
zwatch echo a
watch -n .1 echo a
watch -n .01 echo a
watch -n .001 echo a
watch -n .001 echo a
watch -n .001 zsh -f
watch -n .1 zsh -f
watch -n .1
watch -n .1 zsh -f
echo $((ceil(5)))
echo $((ceil(5, 5)))
echo $((ceil(5/10)*10))
echo $((ceil(6/10)*10))
echo $((ceil(6*10)*10))
echo $((ceil(.5*10)*10))
echo $((ceil(.05*10)*10))
echo $((ceil(.01*10)*10))
run-help zcalc
zcalc
zcalc --help
zcalc -f -e ':fix 4' '0'
which zcalc
run-help printf
zwatch -n 5.001 echo 1
zwatch -n 5.001 echo 1
zwatch -n 5 echo 1
zwatch echo 1
zwatch -n 5 echo 1
zwatch -n 5.001 echo 1
zwatch -n 5.001 echo 1
zwatch -n 5.001 echo 1
zwatch -n 5 echo 1
zwatch -n 5 echo 1
zwatch -n 5 echo 1
zwatch -n 5.0000001 echo 1
zwatch -n 5.01 echo 1
watch -n 5.01 echo 1
watch -n .01 echo 1
watch -n 9.01 echo 1
watch -n 1.01 echo 1
watch -n 1.1 echo 1
watch -n 1.05 echo 1
zwatch -n 1.05 echo 1
watch -n 1.05 echo 1
zwatch -n 1.05 echo 1
seconds=5
\
local centiseconds=$(( int(ceil(seconds * 10) * 10) ))
echo $centiseconds
seconds=5.01
\
local centiseconds=$(( int(ceil(seconds * 10) * 10) ))
echo $centiseconds
\
local seconds=$(( centiseconds / 100 ))
echo $seconds
zwatch -n 1.05 echo 1
watch -n 1.05 echo 1
watch -n 1.01 echo 1
watch -n 1.04 echo 1
zwatch -n 1.01 echo 1
watch -n 1.05 echo 1
watch -n 1.04 echo 1
zwatch -n 1.04 echo 1
zwatch -n 1.04 echo 1
zcalc
zwatch -n 1.04 echo 1
watch -n 1.04 echo 1
zwatch -n 1.05 echo 1
zwatch -n 1.051 echo 1
zwatch -n 1.05 echo 1
zwatch -n .01 echo 1
zwatch -n .01 echo 1
watch -n .01 echo 1
watch -n .0 echo 1
zwatch -n .01 echo 1
zwatch -n .01 echo 1
zwatch -n .01 echo 1
zwatch -n .01 echo 1
watch -n .11 echo 1
watch -n .15 echo 1
watch -n .151 echo 1
watch -n .15 echo 1
zwatch -n .15 echo 1
watch -n .15 echo 1
zwatch -n .15 echo 1
watch -n .15 echo 1
zwatch -n .15 echo 1
zwatch -n .15 echo 1
zwatch -n .15 echo '' 1
watch -n .15 echo '' 1
watch echo 1 | cat
watch echo 1 | cat
watch echo 1 | cat -v
zwatch echo 1 | cat
zwatch echo 1 | cat -v
watch echo 1 | cat -v
zwatch -- -n 1
zwatch -- -n 1
zwatch -- -n 1
zwatch -- -n 1
zwatch -- $0 1
zwatch $0 1
zwatch -n 1 -n 2 -- echo a
watch -n 1 -n 2
killall WallpaperAgent
killall WallpaperAgent
zwatch
watch
which watch
brew info sh
brew info shc
brew search sh
brew info fish
sh
fish
psub
asf
run-help diff
run-help diff
emulate
exit
diff /bin/sh /bin/zsh
diff /bin/sh /bin/bash
diff -a /bin/sh /bin/zsh
clear
ln /bin/sh ./test_sh
ln /bin/sh ./sh
run-help ln
ln /bin/sh ./sh
sudo ln /bin/sh ./sh
sudo ln /bin/zsh ./sh
touch a
ln a ./sh
ls
cat sh
ls -a
ls -@
ls -@a
ls -l
ln a ./sh
rm a
rm sh
ln -s /bin/zsh ./sh
./sh
./sh
mv sh csh
./csh
mv csh ksh
./ksh
mv ksh bash
./bash
rm ./bash
sh
sh
ksh
brew info bash
brew info csh
which ksh
brew info ksh
brew install ksh
csh
brew search csh
brew info tcsh
brew install tcsh
ccsh
csh
csh -v
csh --version
/bin/ksh --version
ksh --version
zsh --version
/bin/zsh --version
sh --version
bash --version
/bin/bash --version
diff /bin/bash /bin/sh
diff -a /bin/bash /bin/sh
clear
csh --version
tcsh --version
tcsh --version
/bin/tcsh --version
tcsh --version
tcsh --version
/bin/tcsh --version
tcsh
/bin/tcsh
tsh
tsh
brew info teleport
brew info vcsh
brew search csh
brew info fsh
brew info vsh
brew info *sh
brew info {a..z}sh
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
brew search zshb
brew search zshbench
brew info zsh-bench
brew info zsh-async
brew install zsh-async
ls   /opt/homebrew/share/zsh/site-functions\

run-help async
run-help async
async
async_job echo echo 1
brew uninstall zsh-async
compinit -u
compinit -u
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
time zsh -lic ''
echo a
return 1
return 255
clear
return 255
autoload
-echo() {echo a}
-echo
--echo
run-help typeset
typeset a=([a]=5)
typeset -a a=([a]=5)
typeset -A a=([a]=5)
echo $a
setopt nohistbang
setopt nobanghist
^echo a
^echo a
+echo a
zsh -lix
path[${path[(i)/bin]}]=( )
typeset path[${path[(i)/bin]}]=( )
eval typeset 'path[${path[(i)/bin]}]=( )'
setopt
setopt
setopt
setopt
eval typeset 'path[${path[(i)/bin]}]=( )'
eval typeset 'path[${path[(i)/bin]}]=( )'
emulate -LR zsh
eval typeset 'path[${path[(i)/bin]}]=( )'
setopt
eval typeset 'path[${path[(i)/bin]}]=( )'
typeset 'path[16]'=( )
echo $path
mail
typeset path[${path[(i)/bin]}]=( )
echo path[${path[(i)/bin]}]
echo path[${path[(i)/bin]}]
echo path[${path[(i)/bin]}]
typeset path[${path[(i)/bin]}]=( )
echo path[${path[(i)/bin]}]
echo ${path[(i)/bin]}
path[${path[(i)/bin]}]=( )
echo path[${path[(i)/bin]}]
echo $path
path[${path[(i)/bin]}]=( )
path[${path[(i)/bin]}]=( )
path[${path[(i)/bin]}]=( )
echo $path
path+=''
echo $path
path+='a'
echo $path
path+=('a')
echo $path
path+=( 'a' )
echo $path
typeset path+=( 'a' )
__reset
autoload -Uz $fpath[1]/**/__?*(-N^/)
__reset
echo $fpath[1]
echo $fpath
echo $fpath
fpath=( $ZDOTDIR/functions $ZDOTDIR/functions/**(-/N) $fpath)\

echo $fpath
echo $fpath
typeset fpath=( /Users/lucaszheng/.zsh/functions /Users/lucaszheng/.zsh/functions/completion /Users/lucaszheng/.zsh/functions/hooks /Users/lucaszheng/.zsh/functions/math /Users/lucaszheng/.zsh/functions/utils /Users/lucaszheng/.zsh/functions/wrappers /Users/lucaszheng/.zsh/functions/zle /opt/homebrew/opt/curl/share/zsh/site-functions /opt/homebrew/share/zsh-completions /opt/homebrew/share/zsh/site-functions /opt/homebrew/share/zsh/functions )\

echo $fpath
echo $fpath
mail
echo $fpath
fpath
echo $fpath
__reset
clear
autoload
echo $fpath
run-help typeset
echo $SAVEHIST
echo $HISTSIZE
brew info ash
brew info assh
brew info dash
dash
dash --version
dash -v
run-help dash
dash
dash -version
dash -V
brew install dash
dash --version
if [[ -z $a ]] echo a
run-help dash
dash
sh
command 2> >(while read line; do echo -e "\e[01;31m$line\e[0m" >&2; done)
echo 1 >&2
exec 2> >(while read line; do echo -e "\e[01;31m$line\e[0m" >&2; done)\

echo 1
echo 1>&2
echo a >&2
mv askmfkd
mv
ls
ls --help
ls -h
gls
gls --help
gls danfsuid
gls -sfad
gls --sfad
brew info itch
brew search swann
set -x
PROMPT=%F{6v}a
PROMPT=%F{7v}a
PROMPT=%F{5v}a
PROMPT=%F{2v}a
PROMPT=%F{6v}a
PROMPT=%F{1v}a
PROMPT=%F{2v}a
PROMPT=%F{3v}a
PROMPT=%F{4v}a
PROMPT=%F{%6v}a
PROMPT=%F{%1v}a
PROMPT=%F{%2v}a
PROMPT=%F{%6v}a
PROMPT=%F{%6v}a
echoti color
echoti colors
echoti colors
echoti bce
echo -e '\e]11;?\a'
echo -e '\e]11;?\a'
echo -e '\e]11;?\a' | cat -v
echo -e '\e]11;?\a'
printf "\e]11;?\a"
printf "\e]11;?\a"
printf "\e]11;?\a"
printf "\e]11;?\a"
printf "\e]11;?\a"
printf "\e]11;?\a"; read -s REPLY; echo $REPLY
printf "\e]11;?\a"; read REPLY
printf "\e]11;?\a"; read -d $'\a' REPLY
printf "\e]11;?\a"; read -sd $'\a' REPLY
printf "\e]11;?\a"; read -sd $'\a' REPLY; echo $REPLY
printf "\e]11;?\a"; read -sd $'\a' REPLY; echo $REPLY; echo hello
echo $TERM_BG
echo $TERM_BG | cat -v
echo $TERM_BG | cat -v
printf "\e]11;?\a"; read -sd $'\a' REPLY;
printf "\e]11;?\a"; read -sd $'\a' REPLY; echo $REPLY | cat -v
echo $TERM_BG
echo $TERM_BG | cat -v
zsh -lix
echo $TERM_BG
clear
eval typeset -g 'TERM_BG=$REPLY;'
1=typeset 2=-g; if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;'; }
1=typeset 2=-g; if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;'; }\
\

1=typeset 2=-g; if builtin eval "true"  { builtin eval "$@" 'TERM_BG=$REPLY;'; }\
\

1=typeset 2=-g; if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;'; }\
}
1=typeset 2=-g; if builtin eval "true"; then { builtin eval "$@" 'TERM_BG=$REPLY;'; }
1=typeset
2=-g
if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;'; }
if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;'; };
if builtin eval "true"; { builtin eval "$@" 'TERM_BG=$REPLY;' }
setopt
{ echo 1 }
if (( 1 == 0 )); { echo 1 }
if (( 1 = 0 )); { echo 1 }
if (( 1 == $? )); { echo 1 }
if (( 1 == 0 )) { echo 1 }
if (( 1 == 0 )) { echo 1 }
setopt
if (( $? == 0 )) { builtin eval "$@" $flags $REPLY; }
echo $#reply
echo $#REPLY
echo $reply
typeset reply
typeset REPLY
run-help read
mail
echo $TERM_BG a
echo $TERM_BG a
echo -E $TERM_BG a
echo ${TERM_BG}a
echo ${TERM_BG}a|cat-v
echo ${TERM_BG}a|cat -v
echo ${TERM_BG}
echo ${TERM_BG}
echo ${TERM_BG}
echo -e ${TERM_BG}
echo
a
a
return 1
return 255
return 256
return 100000000000
return 10000000000000000000
return 1000000000000000000000000000000000000000000000000000000
return 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
return 1
